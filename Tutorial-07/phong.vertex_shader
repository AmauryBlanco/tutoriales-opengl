#version 330 core

layout (location = 0) in vec4 position;
layout (location = 1) in vec2 texture;
layout (location = 2) in vec3 normal;

uniform mat4 mv_matrix;
uniform mat4 view_matrix;
uniform mat4 proj_matrix;

uniform vec3 light_pos = vec3(0.0, 3.0, -3.0); 

out vec3 N1;
out vec3 L1;
out vec3 V1;
void main(void)
{
	// Calculate view-space coordinate
	vec4 P = mv_matrix * position;

	// Calculate normal in view-space
	N1 = mat3(mv_matrix) * normal;
	
	// Calculate light vector
	L1 = light_pos - P.xyz;
	
	// Calculate view vector
	V1 = -P.xyz;
	
	// Calculate the clip-space position of each vertex
	gl_Position = proj_matrix * P;
}